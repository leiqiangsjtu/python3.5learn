print('hello,world')
print('The quick brown fox','jumps over','the lazy dog')
print(100+200)
name=input()
name=input('please enter your name')
# 注释
10/3 =3.33333333
10//3=3
10%3=1
格式化 %d整数  %f浮点数   %s字符串   %x十六进制整数

classmates = ['Michael','Bob','Alice']    
第一个元素classmates[0];倒数第一个元素[-1];倒数第二个[-2]
len()
classmates.append('Adam')
classmates.insert(1,'Jack')在第一个和第二个元素间插入一个
classmates.pop()删除末尾元素
classmates.pop(1)删除第二个元素

元组 classmates=('Michael','Bob','Alice')一旦初始化不能修改
classmates[0]   =Michael

if age >=18:
	...
elif age >=8:
	...
else:
	...

if x:  x非0，非空字符串，非空list即为ture

for name in classmates:
	print(name)

while n>0:
	...

字典 dict         d={'Michael':95, 'Bob':75, 'Alice':85}
d['Michael']
d.get('Bob'，-1)  若Bob不存在，返回-1
'Thomas' in d   若Thomas不存在则返回false

d.pop('Bob')   删除Bob

set与字典类似，但没有value,且key不能重复
s=set([1,2,3,2])
s
{1,2,3}
s.add(4)
s.remove(4)
s1 & s2  得交集
s1 | s2  得并集

格式转换 int() float()  str()  bool()

def nop()：
	pass        什么都不做，后续可以添加代码

def enrol(name,gender, age=10, city='Shanghai')：  默认参数，必选参数在前，变化大的参数也在前，变化小的在后


def calc(*numbers):  可变参数，自动组装为tuple
def pers(name,age,**kw)  关键字参数，自动组装为dict字典


切片  list 或 tuple L[:3]  L[1:3]   L[-1:10]（取后十个）  L[:10:2]前十个数每两个取一个  L[::5]所有数每5个取一个

列表生成式  L= [x * x for x in range(i,11) if x % 2 ==0 ]
生成器    L= (x * x for x in range(i,11) if x % 2 ==0 )

